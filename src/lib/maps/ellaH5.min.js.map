{"version":3,"sources":["alert.js","getQuery.js"],"names":["namespace","window","alertTimeout","alertOptions","alert","value","_props","props","_objectSpread","beforeCallback","onBefore","alertContainer","document","createElement","maskStyle","position","top","bottom","left","background","key","hasOwnProperty","addStyle","alertModal","appendChild","addEventListener","e","this","target","onMaskClick","clearAlert","onClosed","preventDefault","contentText","setAttribute","nodeType","id","style","transform","webkitTransform","padding","color","fontSize","borderRadius","cursor","ms","timeout","setTimeout","timeCallback","closeX","innerHTML","closeStyle","right","font","textAlign","height","onclick","insertBefore","onConfirm","confirmBtn","confirmText","confirmStyle","confirmCallback","onCancel","cancelBtn","cancelText","cancelStyle","display","cancelCallback","body","opendCallback","onOpened","callback","getElementById","node","clearTimeout","removeChild","styleObj","call","getParameterName","str","start","indexOf","all","substring","getQuery","name","url","href","location","paraNames","split","queryString","i","getParameterValue","length"],"mappings":"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","file":"../ellaH5.min.js","sourcesContent":["(function () {\r\n\r\n  // 创建命名空间，并暴露框架\r\n  var namespace = 'ellaH5';\r\n  window[namespace] = window[namespace] || {};\r\n\r\n  // 定时器存储器\r\n  window[namespace].alertTimeout = null;\r\n\r\n  // 配置的暴露方法\r\n  window[namespace].alertOptions = {};\r\n\r\n  /**\r\n   *\r\n   * @param {string}  value       需要弹出的内容，字符串\r\n   * @param {object} props\r\n   * @param {string}  id\r\n   * @param {object}  style       样式，按照js的css格式写\r\n   * @param {number}  timeout     多长时间之后隐藏 ms\r\n   * @param {object}  closeStyle  样式，按照js的css格式写 ， 根据timeout来判断\r\n   * @param {function} onBefore   打开之前执行\r\n   * @param {function} onOpened   打开之后执行\r\n   * @param {function} onClosed   关闭之后执行\r\n   * @param {function} onConfirm  确认按钮点击之后的回调事件 ， 根据timeout来判断 ， 需要返回true或者false\r\n   * @param {object} confirmStyle  确认按钮样式\r\n   * @param {string} confirmText  确认按钮文本\r\n   * @param {function} onCancel   取消按钮点击之后的回调事件 ， 根据timeout来判断\r\n   * @param {object} cancelStyle   取消按钮样式\r\n   * @param {string} cancelText   取消按钮文本\r\n   * @param {object} maskStyle   遮罩样式\r\n   * @param {function} onMaskClick   遮罩点击回调\r\n   * @param {function} timeCallback   定时器之后的回调\r\n   *\r\n   * @ps clearAlert为清楚alert弹窗的方法，未暴露，自带回调，会判断onClosed方法，并执行\r\n   */\r\n  window[namespace].alert = function (value, _props) {\r\n\r\n    var props = {\r\n      ...window[namespace].alertOptions,\r\n      ..._props,\r\n    }\r\n\r\n    /**\r\n     * 处理 props.onBefore\r\n     */\r\n    var beforeCallback = props.onBefore;\r\n    if (beforeCallback) {\r\n      beforeCallback()\r\n    }\r\n\r\n    props = props || 'Hello World!'; // 防止传入undefined 或者null 的报错\r\n\r\n    /**\r\n     * 处理 maskStyle\r\n     */\r\n    var alertContainer = document.createElement('div');\r\n    var maskStyle = {\r\n      position: 'fixed',\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      background: \"rgba(255, 255, 255, 0.5)\",\r\n    }\r\n    if (props.maskStyle) {\r\n      for (var key in props.maskStyle) {\r\n        if (props.maskStyle.hasOwnProperty(key)) {\r\n          // 遍历用户传递的属性，依次覆盖或者添加\r\n          maskStyle[key] = props.maskStyle[key]\r\n        }\r\n      }\r\n    }\r\n    // alertContainer.setAttribute('style', createStyleString(maskStyle));\r\n    addStyle(alertContainer, maskStyle)\r\n\r\n    var alertModal = document.createElement('div');\r\n    alertContainer.appendChild(alertModal)\r\n\r\n    /**\r\n     * 处理 onMaskClick\r\n     */\r\n    alertContainer.addEventListener('click', function (e) {\r\n      if (this === e.target) {\r\n        if (typeof props.onMaskClick == 'function') {\r\n          props.onMaskClick()\r\n        } else {\r\n          clearAlert(props.id || 'alertModal', props.onClosed)\r\n        }\r\n      }\r\n    })\r\n    alertContainer.addEventListener('touchmove', function (e) {\r\n      e.preventDefault();\r\n    })\r\n\r\n    /**\r\n     * 处理 props.content\r\n     * 如果没有按对象传值，直接传字符串\r\n     */\r\n    // alertModal.innerHTML = props.content || props;\r\n    var contentText = document.createElement('div');\r\n    contentText.setAttribute('class', 'content');\r\n    if (typeof value === 'string') {\r\n      contentText.innerHTML = value;\r\n    } else if (value.nodeType && value.nodeType === 1) {\r\n      contentText.appendChild(value);\r\n    }\r\n    alertModal.appendChild(contentText)\r\n\r\n    /**\r\n     * 处理 props.id\r\n     */\r\n    alertContainer.setAttribute('id', props.id || 'alertModal');\r\n\r\n    /**\r\n     * 处理 props.style\r\n     * 如果没有传递style，则用一下默认的\r\n     * 不需要按js的驼峰规范来写style名，直接加上字符串引号\r\n     */\r\n    var style = {\r\n      position: 'fixed',\r\n      left: '50%',\r\n      top: '50%',\r\n      transform: 'translate(-50%,-50%)',\r\n      webkitTransform: 'translate(-50%,-50%)',\r\n      padding: '20px',\r\n      background: 'rgba(0, 0, 0, 0.7)',\r\n      color: '#fff',\r\n      fontSize: '13px',\r\n      borderRadius: '8px',\r\n      cursor: 'default'\r\n    }\r\n    if (props.style) {\r\n      for (var key in props.style) {\r\n        if (props.style.hasOwnProperty(key)) {\r\n          style[key] = props.style[key]\r\n        }\r\n      }\r\n    }\r\n    // alertModal.setAttribute('style', createStyleString(style));\r\n    addStyle(alertModal, style)\r\n\r\n    /**\r\n     * 处理 props.timeout\r\n     * 如果没有传timeout值，则默认为null\r\n     * 如果ms存在，则根据ms增加或者重新定义倒计时\r\n     * 如果ms不存在，则显示遮罩层，显示关闭按钮\r\n     */\r\n    var ms = props.timeout || null;\r\n    if (ms) {\r\n      // 先清除可能存在的弹窗，再增加弹窗\r\n      clearAlert(props.id || 'alertModal', props.onClosed)\r\n      window[namespace].alertTimeout = setTimeout(function () {\r\n        clearAlert(props.id || 'alertModal', props.onClosed);\r\n        if (props.timeCallback) props.timeCallback();\r\n      }, ms)\r\n    } else {\r\n\r\n      /**\r\n       * 创建关闭按钮，实际意义上，这个是取消按钮\r\n       * 处理props.closeStyle 和 props.onCancel\r\n       * 仅仅当timeout不存在的时候，出现关闭按钮，需要手动关闭\r\n       */\r\n      var closeX = document.createElement('div');\r\n      closeX.setAttribute('class', 'close');\r\n      closeX.innerHTML = 'x';\r\n      var closeStyle = {\r\n        position: 'absolute',\r\n        top: '-10px',\r\n        right: '-10px',\r\n        font: '14px/17px \\'黑体\\'',\r\n        width: '20px',\r\n        height: '20px',\r\n        textAlign: 'center',\r\n        background: '#fff',\r\n        color: '#000',\r\n        borderRadius: '50%',\r\n        boxShadow: '0 0 1px #000'\r\n      }\r\n      if (props.closeStyle) {\r\n        for (var key in props.closeStyle) {\r\n          if (props.closeStyle.hasOwnProperty(key)) {\r\n            // 遍历用户传递的属性，依次覆盖或者添加\r\n            closeStyle[key] = props.closeStyle[key]\r\n          }\r\n        }\r\n      }\r\n      // closeX.setAttribute('style', createStyleString(closeStyle));\r\n      addStyle(closeX, closeStyle);\r\n\r\n      closeX.onclick = function (e) {\r\n        if (this === e.target)\r\n          clearAlert(props.id || 'alertModal', props.onClosed);\r\n      }\r\n      alertModal.insertBefore(closeX, contentText)\r\n\r\n\r\n      /**\r\n       * 创建确认按钮\r\n       * 处理props.onConfirm\r\n       * 仅仅当timeout不存在的时候,并且有onConfirm参数时,出现确认按钮\r\n       */\r\n      if (props.onConfirm) {\r\n\r\n        var confirmBtn = document.createElement('div');\r\n        confirmBtn.setAttribute('class', 'confirm');\r\n        confirmBtn.innerHTML = props.confirmText || '确认';\r\n        var confirmStyle = {\r\n          background: 'rgba(255, 255, 255, 0.65)',\r\n          color: '#000',\r\n          display: 'inline-block'\r\n        }\r\n        if (props.confirmStyle) {\r\n          for (var key in props.confirmStyle) {\r\n            if (props.confirmStyle.hasOwnProperty(key)) {\r\n              // 遍历用户传递的属性，依次覆盖或者添加\r\n              confirmStyle[key] = props.confirmStyle[key]\r\n            }\r\n          }\r\n        }\r\n        // confirmBtn.setAttribute('style', createStyleString(confirmStyle));\r\n        addStyle(confirmBtn, confirmStyle);\r\n\r\n        confirmBtn.onclick = function (e) {\r\n          /**\r\n           * 处理 props.onConfirm\r\n           */\r\n          if (this === e.target) {\r\n            var confirmCallback = props.onConfirm;\r\n            if (confirmCallback) {\r\n              confirmCallback(props);\r\n            }\r\n            clearAlert(props.id || 'alertModal', props.onClosed)\r\n          }\r\n\r\n        }\r\n        alertModal.appendChild(confirmBtn)\r\n      }\r\n\r\n      /**\r\n       * 创建取消按钮\r\n       * 处理props.onCancel\r\n       * 仅仅当timeout不存在的时候,并且有onCancel参数时,出现取消按钮\r\n       */\r\n      if (props.onCancel) {\r\n\r\n        var cancelBtn = document.createElement('div');\r\n        cancelBtn.setAttribute('class', 'cancel');\r\n        cancelBtn.innerHTML = props.cancelText || '取消';\r\n        var cancelStyle = {\r\n          background: 'rgba(255, 255, 255, 0.65)',\r\n          color: '#000',\r\n          display: 'inline-block'\r\n        }\r\n        if (props.cancelStyle) {\r\n          for (var key in props.cancelStyle) {\r\n            if (props.cancelStyle.hasOwnProperty(key)) {\r\n              // 遍历用户传递的属性，依次覆盖或者添加\r\n              cancelStyle[key] = props.cancelStyle[key]\r\n            }\r\n          }\r\n        }\r\n        // cancelBtn.setAttribute('style', createStyleString(cancelStyle));\r\n        addStyle(cancelBtn, cancelStyle);\r\n\r\n        cancelBtn.onclick = function (e) {\r\n          /**\r\n           * 处理 props.onCancel\r\n           */\r\n          if (this === e.target) {\r\n            var cancelCallback = props.onCancel;\r\n            if (cancelCallback) {\r\n              cancelCallback(props)\r\n            }\r\n            clearAlert(props.id || 'alertModal', props.onClosed)\r\n          }\r\n\r\n        }\r\n        alertModal.appendChild(cancelBtn)\r\n      }\r\n\r\n    }\r\n\r\n    document.body.appendChild(alertContainer);\r\n\r\n    /**\r\n     * 处理 props.onOpened\r\n     */\r\n    var opendCallback = props.onOpened;\r\n    if (opendCallback) {\r\n      setTimeout(function () {\r\n        opendCallback(props)\r\n      }, 50)\r\n      // 这个确实是在打开之后执行的，弹窗标签已经加入到页面，但是会被alert阻断，所以，这个增加了一个50ms的延迟，主要是针对alert\r\n      // 对于 onClosed 也是一样\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清除原弹窗\r\n   * @param {string} id\r\n   * @param {function} callback\r\n   */\r\n  var clearAlert = function (id, callback) {\r\n    var node;\r\n    if (node = document.getElementById(id)) {\r\n      document.body.removeChild(node);\r\n    };\r\n    if (window[namespace].alertTimeout) {\r\n      clearTimeout(window[namespace].alertTimeout)\r\n    }\r\n    if (callback) {\r\n      setTimeout(function () {\r\n        callback()\r\n      }, 50)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 遍历添加样式\r\n   */\r\n  function addStyle(target, styleObj) {\r\n    for (var key in styleObj) {\r\n      target.style[key] = styleObj[key];\r\n    }\r\n  }\r\n\r\n}.call(this))\r\n","(function () {\r\n\r\n  // 创建命名空间，并暴露框架\r\n  var namespace = 'ellaH5';\r\n  window[namespace] = window[namespace] || {};\r\n\r\n  /**\r\n   * DEMO: localhost?name=xu&age=28\r\n   * ellaH5.getQuery() 获取所有参数，返回对象 {name:'xu',age:'28'}\r\n   * ellaH5.getQuery('name') 获取指定参数，返回 'xu'\r\n   * ellaH5.getQuery('name') 获取指定参数，返回 'xu'\r\n   */\r\n  function getQuery(name) {\r\n    var url = document.location.href;\r\n    var start = url.indexOf(\"?\") + 1;\r\n    if (start == 0) {\r\n      return \"\";\r\n    }\r\n    var value = \"\";\r\n    var queryString = url.substring(start);\r\n    var paraNames = queryString.split(\"&\");\r\n    if (name) {\r\n      for (var i = 0; i < paraNames.length; i++) {\r\n        if (name == getParameterName(paraNames[i])) {\r\n          value = getParameterValue(paraNames[i])\r\n        }\r\n      }\r\n      return value;\r\n    } else {\r\n      var all = {};\r\n      for (var i = 0; i < paraNames.length; i++) {\r\n        if (paraNames[i].indexOf('=') != -1 && paraNames[i].indexOf('=') != 0) {\r\n          var value = getParameterValue(paraNames[i]);\r\n          var name = getParameterName(paraNames[i]);\r\n          all[name] = value;\r\n        }\r\n      }\r\n      return all;\r\n    }\r\n  }\r\n\r\n  function getParameterName(str) {\r\n    var start = str.indexOf(\"=\");\r\n    if (start == -1) {\r\n      return str;\r\n    }\r\n    return str.substring(0, start);\r\n  }\r\n\r\n  function getParameterValue(str) {\r\n    var start = str.indexOf(\"=\");\r\n    if (start == -1) {\r\n      return \"\";\r\n    }\r\n    return str.substring(start + 1);\r\n  }\r\n\r\n  window[namespace].getQuery = getQuery;\r\n\r\n}.call(this))"]}