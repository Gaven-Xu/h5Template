{"version":3,"sources":["alert.js"],"names":["document","documentElement","styleObj","target","style","key","namespace","window","alertTimeout","options","alert","value","_props","props","_objectSpread","console","log","beforeCallback","onBefore","alertContainer","createElement","maskStyle","position","top","bottom","right","background","hasOwnProperty","appendChild","alertModal","e","this","onMaskClick","clearAlert","id","onClosed","addEventListener","contentText","setAttribute","nodeType","transform","color","font-size","border-radius","ms","timeout","timeCallback","closeX","innerHTML","closeStyle","font","box-shadow","width","onclick","height","insertBefore","onConfirm","confirmBtn","confirmText","confirmStyle","addStyle","display","confirmCallback","cancelBtn","cancelText","cancelStyle","onCancel","body","opendCallback","cancelCallback","overflow","callback","node","getElementById","clearTimeout","setTimeout","err"],"mappings":"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","file":"../alert.min.js","sourcesContent":["(function () {\n\n  try {\n\n    // 创建命名空间，并暴露框架\n    var namespace = 'ellaH5';\n    window[namespace] = window[namespace] || {};\n\n    /**\n     *\n     * @param {string}  value       需要弹出的内容，字符串\n     * @param {object} props\n     * @param {string}  id\n     * @param {object}  style       样式，按照js的css格式写\n     * @param {number}  timeout     多长时间之后隐藏 ms\n     * @param {object}  closeStyle  样式，按照js的css格式写 ， 根据timeout来判断\n     * @param {function} onBefore   打开之前执行\n     * @param {function} onOpened   打开之后执行\n     * @param {function} onClosed   关闭之后执行\n     * @param {function} onConfirm  确认按钮点击之后的回调事件 ， 根据timeout来判断 ， 需要返回true或者false\n     * @param {object} confirmStyle  确认按钮样式\n     * @param {string} confirmText  确认按钮文本\n     * @param {function} onCancel   取消按钮点击之后的回调事件 ， 根据timeout来判断\n     * @param {object} cancelStyle   取消按钮样式\n     * @param {string} cancelText   取消按钮文本\n     * @param {object} maskStyle   遮罩样式\n     * @param {function} onMaskClick   遮罩点击回调\n     * @param {function} timeCallback   定时器之后的回调\n     *\n     * @ps clearAlert为清楚alert弹窗的方法，未暴露，自带回调，会判断onClosed方法，并执行\n     */\n    window[namespace].alertTimeout = null;\n    window[namespace].options = {};\n    window[namespace].alert = function (value, _props) {\n\n      var props = {\n        ...window[namespace].options,\n        ..._props,\n      }\n\n      console.log(value, props)\n      /**\n       * 处理 props.onBefore\n       */\n      var beforeCallback = props.onBefore;\n      if (beforeCallback) {\n        beforeCallback()\n      }\n\n      props = props || 'Hello World!'; // 防止传入undefined 或者null 的报错\n\n      /**\n       * 处理 maskStyle\n       */\n      var alertContainer = document.createElement('div');\n      var maskStyle = {\n        position: 'fixed',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        background: \"rgba(255, 255, 255, 0.5)\",\n      }\n      if (props.maskStyle) {\n        for (var key in props.maskStyle) {\n          if (props.maskStyle.hasOwnProperty(key)) {\n            // 遍历用户传递的属性，依次覆盖或者添加\n            maskStyle[key] = props.maskStyle[key]\n          }\n        }\n      }\n      // alertContainer.setAttribute('style', createStyleString(maskStyle));\n      addStyle(alertContainer, maskStyle)\n\n      var alertModal = document.createElement('div');\n      alertContainer.appendChild(alertModal)\n\n      /**\n       * 处理 onMaskClick\n       */\n      alertContainer.addEventListener('click', function (e) {\n        if (this === e.target) {\n          if (typeof props.onMaskClick == 'function') {\n            props.onMaskClick()\n          } else {\n            clearAlert(props.id || 'alertModal', props.onClosed)\n          }\n        }\n      })\n\n      /**\n       * 处理 props.content\n       * 如果没有按对象传值，直接传字符串\n       */\n      // alertModal.innerHTML = props.content || props;\n      var contentText = document.createElement('div');\n      contentText.setAttribute('class', 'content');\n      if (typeof value === 'string') {\n        contentText.innerHTML = value;\n      } else if (value.nodeType && value.nodeType === 1) {\n        contentText.appendChild(value);\n      }\n      alertModal.appendChild(contentText)\n\n      /**\n       * 处理 props.id\n       */\n      alertContainer.setAttribute('id', props.id || 'alertModal');\n\n      /**\n       * 处理 props.style\n       * 如果没有传递style，则用一下默认的\n       * 不需要按js的驼峰规范来写style名，直接加上字符串引号\n       */\n      var style = {\n        position: 'fixed',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%,-50%)',\n        padding: '20px',\n        background: 'rgba(0, 0, 0, 0.7)',\n        color: '#fff',\n        'font-size': '13px',\n        'border-radius': '8px',\n        cursor: 'default'\n      }\n      if (props.style) {\n        for (var key in props.style) {\n          if (props.style.hasOwnProperty(key)) {\n            style[key] = props.style[key]\n          }\n        }\n      }\n      // alertModal.setAttribute('style', createStyleString(style));\n      addStyle(alertModal, style)\n\n      /**\n       * 处理 props.timeout\n       * 如果没有传timeout值，则默认为null\n       * 如果ms存在，则根据ms增加或者重新定义倒计时\n       * 如果ms不存在，则显示遮罩层，显示关闭按钮\n       */\n      var ms = props.timeout || null;\n      if (ms) {\n        // 先清除可能存在的弹窗，再增加弹窗\n        clearAlert(props.id || 'alertModal', props.onClosed)\n        window[namespace].alertTimeout = setTimeout(function () {\n          clearAlert(props.id || 'alertModal', props.onClosed);\n          if (props.timeCallback) props.timeCallback();\n        }, ms)\n      } else {\n\n        /**\n         * 创建关闭按钮，实际意义上，这个是取消按钮\n         * 处理props.closeStyle 和 props.onCancel\n         * 仅仅当timeout不存在的时候，出现关闭按钮，需要手动关闭\n         */\n        var closeX = document.createElement('div');\n        closeX.setAttribute('class', 'close');\n        closeX.innerHTML = 'x';\n        var closeStyle = {\n          position: 'absolute',\n          top: '-10px',\n          right: '-10px',\n          font: '14px/17px \\'黑体\\'',\n          width: '20px',\n          height: '20px',\n          'text-align': 'center',\n          background: '#fff',\n          color: '#000',\n          'border-radius': '50%',\n          'box-shadow': '0 0 1px #000'\n        }\n        if (props.closeStyle) {\n          for (var key in props.closeStyle) {\n            if (props.closeStyle.hasOwnProperty(key)) {\n              // 遍历用户传递的属性，依次覆盖或者添加\n              closeStyle[key] = props.closeStyle[key]\n            }\n          }\n        }\n        // closeX.setAttribute('style', createStyleString(closeStyle));\n        addStyle(closeX, closeStyle);\n\n        closeX.onclick = function (e) {\n          if (this === e.target)\n            clearAlert(props.id || 'alertModal', props.onClosed);\n        }\n        alertModal.insertBefore(closeX, contentText)\n\n\n        /**\n         * 创建确认按钮\n         * 处理props.onConfirm\n         * 仅仅当timeout不存在的时候,并且有onConfirm参数时,出现确认按钮\n         */\n        if (props.onConfirm) {\n\n          var confirmBtn = document.createElement('div');\n          confirmBtn.setAttribute('class', 'confirm');\n          confirmBtn.innerHTML = props.confirmText || '确认';\n          var confirmStyle = {\n            background: 'rgba(255, 255, 255, 0.65)',\n            color: '#000',\n            display: 'inline-block'\n          }\n          if (props.confirmStyle) {\n            for (var key in props.confirmStyle) {\n              if (props.confirmStyle.hasOwnProperty(key)) {\n                // 遍历用户传递的属性，依次覆盖或者添加\n                confirmStyle[key] = props.confirmStyle[key]\n              }\n            }\n          }\n          // confirmBtn.setAttribute('style', createStyleString(confirmStyle));\n          addStyle(confirmBtn, confirmStyle);\n\n          confirmBtn.onclick = function (e) {\n            /**\n             * 处理 props.onConfirm\n             */\n            if (this === e.target) {\n              var confirmCallback = props.onConfirm;\n              if (confirmCallback) {\n                confirmCallback(props);\n              }\n              clearAlert(props.id || 'alertModal', props.onClosed)\n            }\n\n          }\n          alertModal.appendChild(confirmBtn)\n        }\n\n        /**\n         * 创建取消按钮\n         * 处理props.onCancel\n         * 仅仅当timeout不存在的时候,并且有onCancel参数时,出现取消按钮\n         */\n        if (props.onCancel) {\n\n          var cancelBtn = document.createElement('div');\n          cancelBtn.setAttribute('class', 'cancel');\n          cancelBtn.innerHTML = props.cancelText || '取消';\n          var cancelStyle = {\n            background: 'rgba(255, 255, 255, 0.65)',\n            color: '#000',\n            display: 'inline-block'\n          }\n          if (props.cancelStyle) {\n            for (var key in props.cancelStyle) {\n              if (props.cancelStyle.hasOwnProperty(key)) {\n                // 遍历用户传递的属性，依次覆盖或者添加\n                cancelStyle[key] = props.cancelStyle[key]\n              }\n            }\n          }\n          // cancelBtn.setAttribute('style', createStyleString(cancelStyle));\n          addStyle(cancelBtn, cancelStyle);\n\n          cancelBtn.onclick = function (e) {\n            /**\n             * 处理 props.onCancel\n             */\n            if (this === e.target) {\n              var cancelCallback = props.onCancel;\n              if (cancelCallback) {\n                cancelCallback(props)\n              }\n              clearAlert(props.id || 'alertModal', props.onClosed)\n            }\n\n          }\n          alertModal.appendChild(cancelBtn)\n        }\n\n      }\n\n      document.body.appendChild(alertContainer);\n\n      /**\n       * 处理 props.onOpened\n       */\n      var opendCallback = props.onOpened;\n      if (opendCallback) {\n        setTimeout(function () {\n          opendCallback(props)\n        }, 50)\n        // 这个确实是在打开之后执行的，弹窗标签已经加入到页面，但是会被alert阻断，所以，这个增加了一个50ms的延迟，主要是针对alert\n        // 对于 onClosed 也是一样\n      }\n\n      document.documentElement.style.height = '100%';\n      document.documentElement.style.overflow = 'hidden';\n\n    }\n    /**\n     * 清除原弹窗\n     * @param {string} id\n     * @param {function} callback\n     */\n    var clearAlert = function (id, callback) {\n      var node;\n      if (node = document.getElementById(id)) {\n        document.body.removeChild(node);\n      };\n      if (window[namespace].alertTimeout) {\n        clearTimeout(window[namespace].alertTimeout)\n      }\n      if (callback) {\n        setTimeout(function () {\n          callback()\n        }, 50)\n      }\n      document.documentElement.style.height = null;\n      document.documentElement.style.overflow = null;\n    }\n\n    function addStyle(target, styleObj) {\n      for (var key in styleObj) {\n        target.style[key] = styleObj[key];\n      }\n    }\n\n    function bodyLock(event) {\n      event.preventDefault();\n    }\n  } catch (err) {\n    alert(err)\n  }\n\n})()\n"]}