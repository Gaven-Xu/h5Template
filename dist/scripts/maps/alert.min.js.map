{"version":3,"sources":["alert.js"],"names":["namespace","window","alertTimeout","options","alert","value","_props","props","_objectSpread","beforeCallback","onBefore","alertContainer","document","createElement","maskStyle","position","top","bottom","left","right","key","hasOwnProperty","addStyle","alertModal","appendChild","addEventListener","e","onMaskClick","clearAlert","id","onClosed","preventDefault","contentText","setAttribute","innerHTML","nodeType","style","transform","webkitTransform","padding","background","color","ms","timeout","setTimeout","timeCallback","closeX","font","width","height","textAlign","borderRadius","closeStyle","this","target","onclick","confirmBtn","insertBefore","confirmText","confirmStyle","display","onConfirm","confirmCallback","onCancel","cancelBtn","cancelText","cancelStyle","cancelCallback","body","opendCallback","onOpened","callback","node","getElementById","styleObj"],"mappings":"kfAAA,WAGE,IAAIA,EAAY,SAChBC,OAAOD,GAAaC,OAAOD,IAAc,GAyBzCC,OAAOD,GAAWE,aAAe,KACjCD,OAAOD,GAAWG,QAAU,GAC5BF,OAAOD,GAAWI,MAAQ,SAAUC,EAAOC,GAEzC,IAAIC,EAAKC,cAAA,GAJJR,OAAAA,GAAWE,QACXF,GAWDS,EAAiBF,EAAMG,SACvBD,GACFA,IADFF,EAAIE,GAAAA,eASJ,IAAIE,EAAiBC,SAASC,cAAc,OAH5CC,EAAA,CAKEC,SAAU,QACVC,IAAK,EACLC,OAAQ,EAJVC,KAAIP,EACJQ,MAAIL,EACFC,WAAU,4BAEVE,GAAAA,EAAQH,UACRI,IAAI,IAJUE,KAAAb,EAAAO,UAKTP,EALSO,UAAAO,eAAAD,KAAhBN,EAAAM,GAAAb,EAAAO,UAAAM,IAWME,EAAAX,EAAAG,GAED,IAAAS,EAAAX,SAAAC,cAAA,OACFF,EAAAa,YAAAD,GAKHZ,EAAcc,iBAAYZ,QAAc,SAAxCa,GACAf,OAAea,EAAAA,SAEf,mBAAAjB,EAAAoB,YAMMpB,EAAMoB,cAENC,EAAWrB,EAAMsB,IAAM,aAActB,EAAMuB,aAF3CvB,EAAMoB,iBAAN,YAAA,SAAAD,GACDA,EAAAK,mBASL,IAAAC,EAAApB,SAAAC,cAAA,OAMAmB,EAAYC,aAAa,QAAS,WACb,iBAAV5B,EACT2B,EAAYE,UAAY7B,EAJ1BA,EAAA8B,UAAA,IAAA9B,EAAA8B,UAMEH,EAAYR,YAAYnB,GAJ1B2B,EAAWR,YAACS,GAIVD,EAAYR,aAAYnB,KAAxBE,EAAAsB,IAAA,cAcF,IAAIO,EAAQ,CAPZzB,SAAAA,QAEAO,KAAA,MAQEF,IAAK,MACLqB,UAAW,uBACXC,gBAAiB,uBACjBC,QAAS,OACTC,WAAY,qBAPdC,MAAS,OACP1B,SAAU,OACVG,aAFU,MAGVF,OAAK,WAELsB,GAAAA,EAAAA,MACAC,IAAAA,IAASnB,KANCb,EAAA6B,MAOVI,EAAYJ,MAAAf,eAPFD,KAQVqB,EAAOrB,GARGb,EAAA6B,MAAAhB,IAqBZE,EAASC,EAAYa,GAQrB,IAAIM,EAAKnC,EAAMoC,SAAW,KAC1B,GAAID,EAPJd,EAAArB,EAAAsB,IAAA,aAAAtB,EAAAuB,UAUE7B,OAAOD,GAAWE,aAAe0C,WAAW,WAC1ChB,EAAWrB,EAAMsB,IAAM,aAActB,EAAMuB,UACvCvB,EAAMsC,cAActC,EAAMsC,gBAC7BH,OACE,CAJLzC,IAAAA,EAAOD,SAAWE,cAAe0C,OAC/BhB,EAAAA,aAAiBC,QAAM,SACvBiB,EAAIvC,UAAMsC,IACX,IAAEH,EAHH,CAHF3B,SAOO,WAELC,IAAA,QAWEG,MAAO,QACP4B,KAAM,iBACNC,MAAO,OACPC,OAAQ,OATVC,UAAatC,SACbkC,WAAOb,OACPa,MAAOZ,OACPiB,aAAc,MACZpC,UAAU,gBAEVI,GAAAA,EAAOiC,WACPL,IAAI,IAAE3B,KAAAb,EAAA6C,WACD7C,EAAE6C,WALQ/B,eAAAD,KAOf8B,EAAW9B,GAPIb,EAAA6C,WAAAhC,IAwBjB0B,GAxBiBxB,EAAjBwB,EAAAM,GAaAN,EAAIvC,QAAM6C,SAAY1B,GACpB2B,OAAA3B,EAAA4B,QACE1B,EAAUwB,EAAAA,IAAW/B,aAAeD,EAAMU,WAExCsB,EAAAA,aAAkB7C,EAAM6C,GAO9BN,EAAOS,UAAU,CAAjB,IAAAC,EAAA5C,SAAAC,cAAA,OAeE2C,EAAWvB,aAAa,QAAS,WAXnCV,EAAWkC,UAAaX,EAAxBY,aAAA,KAGA,IAAAC,EAAA,CAWInB,WAAY,4BACZC,MAAO,OACPmB,QAAS,gBAEX,GAAIrD,EAAMoD,aAVRpD,IAAK,IAACsD,KAAVtD,EAAqBoD,aAEfH,EAAUG,aAAY9C,eAAcO,KAExCoC,EAAWtB,GAAY3B,EAAMmD,aAAetC,IACzBE,EAAnBkC,EAAAG,GAKAH,EAAUG,QAAAA,SAAcjC,GAIlBiC,GAAAA,OAAAA,EAAAA,OAAA,CACD,IAAAG,EAAAvD,EAAAsD,UACFC,GAEHA,EAAAvD,GAYIqB,EAAWrB,EAAMsB,IAAM,aAActB,EAAMuB,YAR7CP,EAAAC,YAAAgC,GAOG,GAAAjD,EAAAwD,SAAA,CACDnC,IAAAA,EAAWrB,SAAAM,cAAD,OACXmD,EAAA/B,aAAA,QAAA,UAEF+B,EAZD9B,UAAA3B,EAAA0D,YAAA,KA0BA,IAAIC,EAAc,CAblB3C,WAAWC,4BACZiB,MAAA,OAEDmB,QAAA,gBAeE,GAAIrD,EAAM2D,YACR,IAAK,IAAI9C,KAAOb,EAAM2D,YAChB3D,EAAM2D,YAAY7C,eAAeD,KAEnC8C,EAAY9C,GAAOb,EAAM2D,YAAY9C,IAT3CE,EAAI4C,EAAcA,GAEhBzB,EAAOc,QAFS,SAAA7B,GAKlB,GAAInB,OAAM2D,EAAAA,OAAa,CACrB,IAAKC,EAAiBD,EAAAA,SAChB3D,GACF4D,EAAA5D,GAEDqB,EAAArB,EAAAsB,IAAA,aAAAtB,EAAAuB,YAmBLP,EAAWC,YAAYwC,IAK3BpD,SAASwD,KAAK5C,YAAYb,GAZlB,IAAA0D,EAAIF,EAAJG,SACEH,GACDvB,WAAA,WAkBLyB,EAAc9D,IAjBVqB,KA4BV,IAAIA,EAAa,SAAUC,EAAI0C,GAC7B,IAAIC,GACAA,EAAO5D,SAAS6D,eAAe5C,KAhBnCjB,SAAIyD,KAAAA,YAAsBC,GACtBD,OAAAA,GAAenE,cACjB0C,aAAW3C,OAAAD,GAAYE,cAAbqE,GAIV3B,WAAA,WACD2B,KAnQH,KAyRA,SAASjD,EAASgC,EAAQoB,GACxB,IAAK,IAAItD,KAAOsD,EACdpB,EAAOlB,MAAMhB,GAAOsD,EAAStD,IA1TnC","file":"../alert.min.js","sourcesContent":["(function () {\n\n  // 创建命名空间，并暴露框架\n  var namespace = 'ellaH5';\n  window[namespace] = window[namespace] || {};\n\n  /**\n   *\n   * @param {string}  value       需要弹出的内容，字符串\n   * @param {object} props\n   * @param {string}  id\n   * @param {object}  style       样式，按照js的css格式写\n   * @param {number}  timeout     多长时间之后隐藏 ms\n   * @param {object}  closeStyle  样式，按照js的css格式写 ， 根据timeout来判断\n   * @param {function} onBefore   打开之前执行\n   * @param {function} onOpened   打开之后执行\n   * @param {function} onClosed   关闭之后执行\n   * @param {function} onConfirm  确认按钮点击之后的回调事件 ， 根据timeout来判断 ， 需要返回true或者false\n   * @param {object} confirmStyle  确认按钮样式\n   * @param {string} confirmText  确认按钮文本\n   * @param {function} onCancel   取消按钮点击之后的回调事件 ， 根据timeout来判断\n   * @param {object} cancelStyle   取消按钮样式\n   * @param {string} cancelText   取消按钮文本\n   * @param {object} maskStyle   遮罩样式\n   * @param {function} onMaskClick   遮罩点击回调\n   * @param {function} timeCallback   定时器之后的回调\n   *\n   * @ps clearAlert为清楚alert弹窗的方法，未暴露，自带回调，会判断onClosed方法，并执行\n   */\n  window[namespace].alertTimeout = null;\n  window[namespace].options = {};\n  window[namespace].alert = function (value, _props) {\n\n    var props = {\n      ...window[namespace].options,\n      ..._props,\n    }\n\n    /**\n     * 处理 props.onBefore\n     */\n    var beforeCallback = props.onBefore;\n    if (beforeCallback) {\n      beforeCallback()\n    }\n\n    props = props || 'Hello World!'; // 防止传入undefined 或者null 的报错\n\n    /**\n     * 处理 maskStyle\n     */\n    var alertContainer = document.createElement('div');\n    var maskStyle = {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      background: \"rgba(255, 255, 255, 0.5)\",\n    }\n    if (props.maskStyle) {\n      for (var key in props.maskStyle) {\n        if (props.maskStyle.hasOwnProperty(key)) {\n          // 遍历用户传递的属性，依次覆盖或者添加\n          maskStyle[key] = props.maskStyle[key]\n        }\n      }\n    }\n    // alertContainer.setAttribute('style', createStyleString(maskStyle));\n    addStyle(alertContainer, maskStyle)\n\n    var alertModal = document.createElement('div');\n    alertContainer.appendChild(alertModal)\n\n    /**\n     * 处理 onMaskClick\n     */\n    alertContainer.addEventListener('click', function (e) {\n      if (this === e.target) {\n        if (typeof props.onMaskClick == 'function') {\n          props.onMaskClick()\n        } else {\n          clearAlert(props.id || 'alertModal', props.onClosed)\n        }\n      }\n    })\n    alertContainer.addEventListener('touchmove', function (e) {\n      e.preventDefault();\n    })\n\n    /**\n     * 处理 props.content\n     * 如果没有按对象传值，直接传字符串\n     */\n    // alertModal.innerHTML = props.content || props;\n    var contentText = document.createElement('div');\n    contentText.setAttribute('class', 'content');\n    if (typeof value === 'string') {\n      contentText.innerHTML = value;\n    } else if (value.nodeType && value.nodeType === 1) {\n      contentText.appendChild(value);\n    }\n    alertModal.appendChild(contentText)\n\n    /**\n     * 处理 props.id\n     */\n    alertContainer.setAttribute('id', props.id || 'alertModal');\n\n    /**\n     * 处理 props.style\n     * 如果没有传递style，则用一下默认的\n     * 不需要按js的驼峰规范来写style名，直接加上字符串引号\n     */\n    var style = {\n      position: 'fixed',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%,-50%)',\n      webkitTransform: 'translate(-50%,-50%)',\n      padding: '20px',\n      background: 'rgba(0, 0, 0, 0.7)',\n      color: '#fff',\n      fontSize: '13px',\n      borderRadius: '8px',\n      cursor: 'default'\n    }\n    if (props.style) {\n      for (var key in props.style) {\n        if (props.style.hasOwnProperty(key)) {\n          style[key] = props.style[key]\n        }\n      }\n    }\n    // alertModal.setAttribute('style', createStyleString(style));\n    addStyle(alertModal, style)\n\n    /**\n     * 处理 props.timeout\n     * 如果没有传timeout值，则默认为null\n     * 如果ms存在，则根据ms增加或者重新定义倒计时\n     * 如果ms不存在，则显示遮罩层，显示关闭按钮\n     */\n    var ms = props.timeout || null;\n    if (ms) {\n      // 先清除可能存在的弹窗，再增加弹窗\n      clearAlert(props.id || 'alertModal', props.onClosed)\n      window[namespace].alertTimeout = setTimeout(function () {\n        clearAlert(props.id || 'alertModal', props.onClosed);\n        if (props.timeCallback) props.timeCallback();\n      }, ms)\n    } else {\n\n      /**\n       * 创建关闭按钮，实际意义上，这个是取消按钮\n       * 处理props.closeStyle 和 props.onCancel\n       * 仅仅当timeout不存在的时候，出现关闭按钮，需要手动关闭\n       */\n      var closeX = document.createElement('div');\n      closeX.setAttribute('class', 'close');\n      closeX.innerHTML = 'x';\n      var closeStyle = {\n        position: 'absolute',\n        top: '-10px',\n        right: '-10px',\n        font: '14px/17px \\'黑体\\'',\n        width: '20px',\n        height: '20px',\n        textAlign: 'center',\n        background: '#fff',\n        color: '#000',\n        borderRadius: '50%',\n        boxShadow: '0 0 1px #000'\n      }\n      if (props.closeStyle) {\n        for (var key in props.closeStyle) {\n          if (props.closeStyle.hasOwnProperty(key)) {\n            // 遍历用户传递的属性，依次覆盖或者添加\n            closeStyle[key] = props.closeStyle[key]\n          }\n        }\n      }\n      // closeX.setAttribute('style', createStyleString(closeStyle));\n      addStyle(closeX, closeStyle);\n\n      closeX.onclick = function (e) {\n        if (this === e.target)\n          clearAlert(props.id || 'alertModal', props.onClosed);\n      }\n      alertModal.insertBefore(closeX, contentText)\n\n\n      /**\n       * 创建确认按钮\n       * 处理props.onConfirm\n       * 仅仅当timeout不存在的时候,并且有onConfirm参数时,出现确认按钮\n       */\n      if (props.onConfirm) {\n\n        var confirmBtn = document.createElement('div');\n        confirmBtn.setAttribute('class', 'confirm');\n        confirmBtn.innerHTML = props.confirmText || '确认';\n        var confirmStyle = {\n          background: 'rgba(255, 255, 255, 0.65)',\n          color: '#000',\n          display: 'inline-block'\n        }\n        if (props.confirmStyle) {\n          for (var key in props.confirmStyle) {\n            if (props.confirmStyle.hasOwnProperty(key)) {\n              // 遍历用户传递的属性，依次覆盖或者添加\n              confirmStyle[key] = props.confirmStyle[key]\n            }\n          }\n        }\n        // confirmBtn.setAttribute('style', createStyleString(confirmStyle));\n        addStyle(confirmBtn, confirmStyle);\n\n        confirmBtn.onclick = function (e) {\n          /**\n           * 处理 props.onConfirm\n           */\n          if (this === e.target) {\n            var confirmCallback = props.onConfirm;\n            if (confirmCallback) {\n              confirmCallback(props);\n            }\n            clearAlert(props.id || 'alertModal', props.onClosed)\n          }\n\n        }\n        alertModal.appendChild(confirmBtn)\n      }\n\n      /**\n       * 创建取消按钮\n       * 处理props.onCancel\n       * 仅仅当timeout不存在的时候,并且有onCancel参数时,出现取消按钮\n       */\n      if (props.onCancel) {\n\n        var cancelBtn = document.createElement('div');\n        cancelBtn.setAttribute('class', 'cancel');\n        cancelBtn.innerHTML = props.cancelText || '取消';\n        var cancelStyle = {\n          background: 'rgba(255, 255, 255, 0.65)',\n          color: '#000',\n          display: 'inline-block'\n        }\n        if (props.cancelStyle) {\n          for (var key in props.cancelStyle) {\n            if (props.cancelStyle.hasOwnProperty(key)) {\n              // 遍历用户传递的属性，依次覆盖或者添加\n              cancelStyle[key] = props.cancelStyle[key]\n            }\n          }\n        }\n        // cancelBtn.setAttribute('style', createStyleString(cancelStyle));\n        addStyle(cancelBtn, cancelStyle);\n\n        cancelBtn.onclick = function (e) {\n          /**\n           * 处理 props.onCancel\n           */\n          if (this === e.target) {\n            var cancelCallback = props.onCancel;\n            if (cancelCallback) {\n              cancelCallback(props)\n            }\n            clearAlert(props.id || 'alertModal', props.onClosed)\n          }\n\n        }\n        alertModal.appendChild(cancelBtn)\n      }\n\n    }\n\n    document.body.appendChild(alertContainer);\n\n    /**\n     * 处理 props.onOpened\n     */\n    var opendCallback = props.onOpened;\n    if (opendCallback) {\n      setTimeout(function () {\n        opendCallback(props)\n      }, 50)\n      // 这个确实是在打开之后执行的，弹窗标签已经加入到页面，但是会被alert阻断，所以，这个增加了一个50ms的延迟，主要是针对alert\n      // 对于 onClosed 也是一样\n    }\n  }\n  /**\n   * 清除原弹窗\n   * @param {string} id\n   * @param {function} callback\n   */\n  var clearAlert = function (id, callback) {\n    var node;\n    if (node = document.getElementById(id)) {\n      document.body.removeChild(node);\n    };\n    if (window[namespace].alertTimeout) {\n      clearTimeout(window[namespace].alertTimeout)\n    }\n    if (callback) {\n      setTimeout(function () {\n        callback()\n      }, 50)\n    }\n  }\n\n  function addStyle(target, styleObj) {\n    for (var key in styleObj) {\n      target.style[key] = styleObj[key];\n    }\n  }\n\n  function bodyLock(event) {\n    event.preventDefault();\n  }\n\n})()\n"]}